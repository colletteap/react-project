{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\conne\\\\Documents\\\\GitHub\\\\react-project\\\\src\\\\components\\\\Blogcard.js\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport Card from \"@mui/material/Card\";\nimport CardHeader from \"@mui/material/CardHeader\";\nimport CardMedia from \"@mui/material/CardMedia\";\nimport CardContent from \"@mui/material/CardContent\";\nimport CardActions from \"@mui/material/CardActions\";\nimport Typography from \"@mui/material/Typography\";\nimport Button from \"@mui/material/Button\";\nimport { Link } from \"react-router-dom\";\nimport { useMediaQuery } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Blogcard({\n  content,\n  title,\n  linkTo,\n  image\n}) {\n  _s();\n  const isMobile = useMediaQuery(\"(max-width:769px)\");\n  return /*#__PURE__*/_jsxDEV(Card, {\n    sx: {\n      maxWidth: 385,\n      display: \"flex\",\n      justifyContent: \"center\",\n      justifySelf: \"stretch\",\n      alignItems: \"center\",\n      flexDirection: \"column\",\n      borderRadius: \"20px\",\n      width: isMobile ? \"80%\" : \"100%\",\n      height: isMobile ? \"50%\" : \"100%\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      title: title,\n      titleTypographyProps: {\n        sx: {\n          fontFamily: \"Quicksand, sans-serif\",\n          color: \"#233349\",\n          fontWeight: \"bold\",\n          textAlign: \"center\"\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardMedia, {\n      component: \"img\",\n      height: \"280px\",\n      image: image\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        color: \"text.secondary\",\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardActions, {\n      disableSpacing: true,\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: linkTo,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          sx: {\n            textTransform: \"capitalize\",\n            bgcolor: \"#233349\",\n            borderRadius: \"10px\",\n            marginTop: \"10px\"\n          },\n          children: \"Check out the source!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n_s(Blogcard, \"7khsyUHgctuHIPa2/KlDS6LcnT0=\", false, function () {\n  return [useMediaQuery];\n});\n_c = Blogcard;\nvar _c;\n$RefreshReg$(_c, \"Blogcard\");","map":{"version":3,"names":["React","Card","CardHeader","CardMedia","CardContent","CardActions","Typography","Button","Link","useMediaQuery","jsxDEV","_jsxDEV","Blogcard","content","title","linkTo","image","_s","isMobile","sx","maxWidth","display","justifyContent","justifySelf","alignItems","flexDirection","borderRadius","width","height","children","titleTypographyProps","fontFamily","color","fontWeight","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","component","variant","disableSpacing","to","textTransform","bgcolor","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/conne/Documents/GitHub/react-project/src/components/Blogcard.js"],"sourcesContent":["import * as React from \"react\";\r\nimport Card from \"@mui/material/Card\";\r\nimport CardHeader from \"@mui/material/CardHeader\";\r\nimport CardMedia from \"@mui/material/CardMedia\";\r\nimport CardContent from \"@mui/material/CardContent\";\r\nimport CardActions from \"@mui/material/CardActions\";\r\nimport Typography from \"@mui/material/Typography\";\r\nimport Button from \"@mui/material/Button\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useMediaQuery } from \"@mui/material\";\r\n\r\nexport default function Blogcard({ content, title, linkTo, image }) {\r\n  const isMobile = useMediaQuery(\"(max-width:769px)\");\r\n\r\n  return (\r\n    <Card\r\n      sx={{\r\n        maxWidth: 385,\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        justifySelf: \"stretch\",\r\n        alignItems: \"center\",\r\n        flexDirection: \"column\",\r\n        borderRadius: \"20px\",\r\n        width: isMobile ? \"80%\" : \"100%\",\r\n        height: isMobile ? \"50%\" : \"100%\",\r\n      }}\r\n    >\r\n      <CardHeader\r\n        title={title}\r\n        titleTypographyProps={{\r\n          sx: {\r\n            fontFamily: \"Quicksand, sans-serif\",\r\n            color: \"#233349\",\r\n            fontWeight: \"bold\",\r\n            textAlign: \"center\",\r\n          },\r\n        }}\r\n      />\r\n      <CardMedia component=\"img\" height=\"280px\" image={image} />\r\n      <CardContent>\r\n        <Typography variant=\"body2\" color=\"text.secondary\">\r\n          {content}\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions disableSpacing>\r\n        <Link to={linkTo}>\r\n          <Button\r\n            variant=\"contained\"\r\n            sx={{\r\n              textTransform: \"capitalize\",\r\n              bgcolor: \"#233349\",\r\n              borderRadius: \"10px\",\r\n              marginTop: \"10px\",\r\n            }}\r\n          >\r\n            Check out the source!\r\n          </Button>\r\n        </Link>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}