{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\conne\\\\Documents\\\\GitHub\\\\react-project\\\\src\\\\components\\\\skillcards\\\\Blankskillcard.js\";\nimport * as React from \"react\";\nimport Card from \"@mui/joy/Card\";\nimport CardContent from \"@mui/joy/CardContent\";\nimport Typography from \"@mui/joy/Typography\";\nimport { skillInfo } from \"../Data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function BlankSkillCard(skill) {\n  const eachSkill = skillInfo.filter(item => {\n    return item.skill == skill;\n  });\n  console.log(\"tech\", skill);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      variant: \"outlined\",\n      sx: {\n        minWidth: 300,\n        width: \"25%\",\n        borderRadius: \"5px\",\n        \"--Card-radius\": theme => theme.vars.radius.xs\n      },\n      children: [/*#__PURE__*/_jsxDEV(CardContent, {\n        orientation: \"horizontal\",\n        sx: {\n          alignItems: \"flex-start\",\n          gap: 1,\n          position: \"relative\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this), eachSkill.map((item, index) => /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            textAlign: \"start\",\n            fontWeight: 'bold',\n            position: \"absolute\",\n            top: 3\n          },\n          fontSize: \"16px\",\n          children: item.skill\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          sx: {\n            textAlign: 'start',\n            border: \"1px solid #233349\",\n            borderRadius: \"5px\",\n            padding: \"6px\"\n          },\n          children: item.details\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 8\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n\n  /* return (\r\n     <>\r\n     {cardDataSets.map((cardDataSet, index) => (\r\n     <Card\r\n       variant=\"outlined\"\r\n       sx={{\r\n         minWidth: 300,\r\n         width: \"25%\",\r\n         borderRadius: \"5px\",\r\n         \"--Card-radius\": (theme) => theme.vars.radius.xs,\r\n       }}\r\n     >\r\n       <CardContent\r\n         orientation=\"horizontal\"\r\n         sx={{ alignItems: \"flex-start\", gap: 1, position: \"relative\" }}\r\n       ></CardContent>\r\n       <CardContent>\r\n         <Typography sx={{ textAlign: \"start\", fontWeight: 'bold', position: \"absolute\", top: 3 }} fontSize=\"16px\">\r\n             {cardDataSet[0].skill}\r\n           </Typography>\r\n           {cardDataSet.map((cardDataSet, index) => (\r\n           <Typography sx= {{ textAlign: 'start', border: \"1px solid #233349\", borderRadius: \"5px\", padding: \"6px\" }}>\r\n           {cardDataSet.details}\r\n         </Typography>\r\n         ))}\r\n       </CardContent>\r\n     </Card>\r\n      ))}\r\n     </>\r\n   );\r\n   */\n}\n_c = BlankSkillCard;\nvar _c;\n$RefreshReg$(_c, \"BlankSkillCard\");","map":{"version":3,"names":["React","Card","CardContent","Typography","skillInfo","jsxDEV","_jsxDEV","Fragment","_Fragment","BlankSkillCard","skill","eachSkill","filter","item","console","log","children","variant","sx","minWidth","width","borderRadius","theme","vars","radius","xs","orientation","alignItems","gap","position","fileName","_jsxFileName","lineNumber","columnNumber","map","index","textAlign","fontWeight","top","fontSize","border","padding","details","_c","$RefreshReg$"],"sources":["C:/Users/conne/Documents/GitHub/react-project/src/components/skillcards/Blankskillcard.js"],"sourcesContent":["import * as React from \"react\";\r\nimport Card from \"@mui/joy/Card\";\r\nimport CardContent from \"@mui/joy/CardContent\";\r\nimport Typography from \"@mui/joy/Typography\";\r\nimport { skillInfo } from \"../Data\";\r\n\r\nexport default function BlankSkillCard(skill) {\r\n\r\n  const eachSkill = skillInfo.filter ((item) => {return item.skill == skill});\r\n\r\n  console.log(\"tech\", skill)\r\n\r\nreturn (\r\n  <>\r\n  <Card\r\n      variant=\"outlined\"\r\n      sx={{\r\n        minWidth: 300,\r\n        width: \"25%\",\r\n        borderRadius: \"5px\",\r\n        \"--Card-radius\": (theme) => theme.vars.radius.xs,\r\n      }}\r\n    >\r\n      <CardContent\r\n        orientation=\"horizontal\"\r\n        sx={{ alignItems: \"flex-start\", gap: 1, position: \"relative\" }}\r\n      ></CardContent>\r\n      {eachSkill.map((item, index) => (\r\n       <CardContent>\r\n        <Typography sx={{ textAlign: \"start\", fontWeight: 'bold', position: \"absolute\", top: 3 }} fontSize=\"16px\">\r\n            {item.skill}\r\n          </Typography>\r\n          \r\n          <Typography sx= {{ textAlign: 'start', border: \"1px solid #233349\", borderRadius: \"5px\", padding: \"6px\" }}>\r\n          {item.details}\r\n        </Typography>\r\n      </CardContent>\r\n      ))}\r\n      </Card>\r\n  </>\r\n)\r\n\r\n\r\n /* return (\r\n    <>\r\n    {cardDataSets.map((cardDataSet, index) => (\r\n    <Card\r\n      variant=\"outlined\"\r\n      sx={{\r\n        minWidth: 300,\r\n        width: \"25%\",\r\n        borderRadius: \"5px\",\r\n        \"--Card-radius\": (theme) => theme.vars.radius.xs,\r\n      }}\r\n    >\r\n      <CardContent\r\n        orientation=\"horizontal\"\r\n        sx={{ alignItems: \"flex-start\", gap: 1, position: \"relative\" }}\r\n      ></CardContent>\r\n      <CardContent>\r\n        <Typography sx={{ textAlign: \"start\", fontWeight: 'bold', position: \"absolute\", top: 3 }} fontSize=\"16px\">\r\n            {cardDataSet[0].skill}\r\n          </Typography>\r\n          {cardDataSet.map((cardDataSet, index) => (\r\n          <Typography sx= {{ textAlign: 'start', border: \"1px solid #233349\", borderRadius: \"5px\", padding: \"6px\" }}>\r\n          {cardDataSet.details}\r\n        </Typography>\r\n        ))}\r\n      </CardContent>\r\n    </Card>\r\n     ))}\r\n    </>\r\n  );\r\n  */\r\n} \r\n\r\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,IAAI,MAAM,eAAe;AAChC,OAAOC,WAAW,MAAM,sBAAsB;AAC9C,OAAOC,UAAU,MAAM,qBAAqB;AAC5C,SAASC,SAAS,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEpC,eAAe,SAASC,cAAcA,CAACC,KAAK,EAAE;EAE5C,MAAMC,SAAS,GAAGP,SAAS,CAACQ,MAAM,CAAGC,IAAI,IAAK;IAAC,OAAOA,IAAI,CAACH,KAAK,IAAIA,KAAK;EAAA,CAAC,CAAC;EAE3EI,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEL,KAAK,CAAC;EAE5B,oBACEJ,OAAA,CAAAE,SAAA;IAAAQ,QAAA,eACAV,OAAA,CAACL,IAAI;MACDgB,OAAO,EAAC,UAAU;MAClBC,EAAE,EAAE;QACFC,QAAQ,EAAE,GAAG;QACbC,KAAK,EAAE,KAAK;QACZC,YAAY,EAAE,KAAK;QACnB,eAAe,EAAGC,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACC,MAAM,CAACC;MAChD,CAAE;MAAAT,QAAA,gBAEFV,OAAA,CAACJ,WAAW;QACVwB,WAAW,EAAC,YAAY;QACxBR,EAAE,EAAE;UAAES,UAAU,EAAE,YAAY;UAAEC,GAAG,EAAE,CAAC;UAAEC,QAAQ,EAAE;QAAW;MAAE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC,EACdtB,SAAS,CAACuB,GAAG,CAAC,CAACrB,IAAI,EAAEsB,KAAK,kBAC1B7B,OAAA,CAACJ,WAAW;QAAAc,QAAA,gBACXV,OAAA,CAACH,UAAU;UAACe,EAAE,EAAE;YAAEkB,SAAS,EAAE,OAAO;YAAEC,UAAU,EAAE,MAAM;YAAER,QAAQ,EAAE,UAAU;YAAES,GAAG,EAAE;UAAE,CAAE;UAACC,QAAQ,EAAC,MAAM;UAAAvB,QAAA,EACpGH,IAAI,CAACH;QAAK;UAAAoB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eAEb3B,OAAA,CAACH,UAAU;UAACe,EAAE,EAAG;YAAEkB,SAAS,EAAE,OAAO;YAAEI,MAAM,EAAE,mBAAmB;YAAEnB,YAAY,EAAE,KAAK;YAAEoB,OAAO,EAAE;UAAM,CAAE;UAAAzB,QAAA,EACzGH,IAAI,CAAC6B;QAAO;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CACZ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI;EAAC,gBACT,CAAC;;EAIJ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAACU,EAAA,GApEuBlC,cAAc;AAAA,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}