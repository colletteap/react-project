{"ast":null,"code":"import React,{useState}from\"react\";import Card from\"@mui/joy/Card\";import CardContent from\"@mui/joy/CardContent\";import Link from\"@mui/joy/Link\";import Input from\"@mui/joy/Input\";import CustomButton from\"../soundReact/customButton\";// Import startements\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function Postcard(_ref)// Declares a functional component named 'Postcard' that accepts 5 props and returns JSX to render a card for posting comments\n{let{type,cardId,setCommentsArray,setShowPostcard,setShowAskQuestion}=_ref;const[comment,setComment]=useState(\"\");const[commentsList,setCommentsList]=useState([]);// These are state hooks; defining a state variable of comment and a function setComment, initial value is an empty string\nconst handlePostQuestionClick=()=>{if(comment.trim()===\"\"){// This is the event handler, a function called when user clicks Post button, checks if comment is not empty...\nreturn;}const storedComments=localStorage.getItem(\"commentsArray\");const commentsArray=storedComments?JSON.parse(storedComments):[];const newComment={id:commentsList.length+1,type:type,text:comment,cardId:commentsArray.length+1};// will return object newComment\nlocalStorage.setItem(\"commentsArray\",JSON.stringify([newComment,...commentsArray]));// Putting the commentsArray into local storage and creating a newComment to be placed in front of the exisiting commentsArray\nsetCommentsList([newComment,...commentsList]);setComment(\"\");setCommentsArray(prevComments=>[newComment,...prevComments]);setShowPostcard(false);setShowAskQuestion(true);};// Updates commentsList, resets comment, adds new comment to commentsArray and updates state to show and hide postcard\nreturn/*#__PURE__*/_jsxs(Card,{variant:\"outlined\",sx:{width:\"300px\",border:\"2px solid black\",borderRadius:\"15px\",\"--Card-radius\":theme=>theme.vars.radius.xs},children:[/*#__PURE__*/_jsx(CardContent,{children:/*#__PURE__*/_jsx(Link,{component:\"button\",underline:\"none\",fontWeight:\"lg\",textColor:\"text.primary\",children:type})}),commentsList.map(commentItem=>/*#__PURE__*/_jsx(CardContent,{sx:{border:\"2px solid #A8512F\",borderRadius:\"10px\",padding:\"8px\",fontSize:\"sm\"},children:commentItem.text},commentItem.id)),/*#__PURE__*/_jsxs(CardContent,{orientation:\"horizontal\",sx:{gap:1},children:[/*#__PURE__*/_jsx(Input,{variant:\"plain\",size:\"sm\",placeholder:\"Ask a question!\",value:comment,onChange:e=>setComment(e.target.value),sx:{flex:1,px:0,\"--Input-focusedThickness\":\"0px\",border:\"2px solid #233349\",borderRadius:\"5px\",padding:\"5px\"}}),/*#__PURE__*/_jsx(CustomButton,{onClick:handlePostQuestionClick,variant:\"Post\",underline:\"none\",role:\"button\",children:\"Post\"})]})]});}","map":{"version":3,"names":["React","useState","Card","CardContent","Link","Input","CustomButton","jsx","_jsx","jsxs","_jsxs","Postcard","_ref","type","cardId","setCommentsArray","setShowPostcard","setShowAskQuestion","comment","setComment","commentsList","setCommentsList","handlePostQuestionClick","trim","storedComments","localStorage","getItem","commentsArray","JSON","parse","newComment","id","length","text","setItem","stringify","prevComments","variant","sx","width","border","borderRadius","theme","vars","radius","xs","children","component","underline","fontWeight","textColor","map","commentItem","padding","fontSize","orientation","gap","size","placeholder","value","onChange","e","target","flex","px","onClick","role"],"sources":["C:/Users/conne/Documents/GitHub/react-project/src/components/Postcard.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Card from \"@mui/joy/Card\";\r\nimport CardContent from \"@mui/joy/CardContent\";\r\nimport Link from \"@mui/joy/Link\";\r\nimport Input from \"@mui/joy/Input\";\r\nimport CustomButton from \"../soundReact/customButton\";\r\n\r\n// Import startements\r\n\r\nexport default function Postcard({\r\n  type,\r\n  cardId,\r\n  setCommentsArray,\r\n  setShowPostcard,\r\n  setShowAskQuestion,\r\n}) \r\n\r\n// Declares a functional component named 'Postcard' that accepts 5 props and returns JSX to render a card for posting comments\r\n\r\n{\r\n  const [comment, setComment] = useState(\"\");\r\n  const [commentsList, setCommentsList] = useState([]);\r\n\r\n// These are state hooks; defining a state variable of comment and a function setComment, initial value is an empty string\r\n\r\n  const handlePostQuestionClick = () => {\r\n    if (comment.trim() === \"\") {\r\n     \r\n// This is the event handler, a function called when user clicks Post button, checks if comment is not empty...\r\n\r\n      return;\r\n    }\r\n    const storedComments = localStorage.getItem(\"commentsArray\");\r\n    const commentsArray = storedComments ? JSON.parse(storedComments) : [];\r\n\r\n    const newComment = {\r\n      id: commentsList.length + 1,\r\n      type: type,\r\n      text: comment,\r\n      cardId: commentsArray.length + 1,\r\n    };\r\n\r\n// will return object newComment\r\n   \r\n    localStorage.setItem(\r\n      \"commentsArray\",\r\n      JSON.stringify([newComment, ...commentsArray])\r\n    );\r\n    \r\n// Putting the commentsArray into local storage and creating a newComment to be placed in front of the exisiting commentsArray\r\n\r\n    setCommentsList([newComment, ...commentsList]);\r\n    setComment(\"\");\r\n    setCommentsArray((prevComments) => [newComment, ...prevComments]);\r\n    setShowPostcard(false);\r\n    setShowAskQuestion(true);\r\n  };\r\n\r\n  // Updates commentsList, resets comment, adds new comment to commentsArray and updates state to show and hide postcard\r\n\r\n  return (\r\n    <Card\r\n      variant=\"outlined\"\r\n      sx={{\r\n        width: \"300px\",\r\n        border: \"2px solid black\",\r\n        borderRadius: \"15px\",\r\n        \"--Card-radius\": (theme) => theme.vars.radius.xs,\r\n      }}\r\n    >\r\n      <CardContent>\r\n        <Link\r\n          component=\"button\"\r\n          underline=\"none\"\r\n          fontWeight=\"lg\"\r\n          textColor=\"text.primary\"\r\n        >\r\n          {type}\r\n        </Link>\r\n      </CardContent>\r\n      {commentsList.map((commentItem) => (\r\n        <CardContent\r\n          key={commentItem.id}\r\n          sx={{\r\n            border: \"2px solid #A8512F\",\r\n            borderRadius: \"10px\",\r\n            padding: \"8px\",\r\n            fontSize: \"sm\",\r\n          }}\r\n        >\r\n          {commentItem.text}\r\n        </CardContent>\r\n      ))}\r\n      <CardContent orientation=\"horizontal\" sx={{ gap: 1 }}>\r\n        <Input\r\n          variant=\"plain\"\r\n          size=\"sm\"\r\n          placeholder=\"Ask a question!\"\r\n          value={comment}\r\n          onChange={(e) => setComment(e.target.value)}\r\n          sx={{\r\n            flex: 1,\r\n            px: 0,\r\n            \"--Input-focusedThickness\": \"0px\",\r\n            border: \"2px solid #233349\",\r\n            borderRadius: \"5px\",\r\n            padding: \"5px\",\r\n          }}\r\n        />\r\n        <CustomButton onClick={handlePostQuestionClick} \r\n        variant={\"Post\"}\r\n        underline=\"none\" \r\n        role=\"button\">\r\n          \r\n          Post\r\n        </CustomButton>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}