{"ast":null,"code":"import React from'react';import Grid from\"@mui/joy/Grid\";import ClickSound from\"./clicksound.wav\";import{useSoundContext}from'./SoundContext';import{jsx as _jsx}from\"react/jsx-runtime\";const CustomButton=_ref=>{let{children,onClick,variant,disableSound}=_ref;const{isSoundOn}=useSoundContext();disableSound=disableSound?disableSound:false;/* if disableSound is truthy, execute disableSound, if not then disableSound \r\n    is false or not truthy and do not execute*/ // bringing in state so that it knows what sound to connect to\nlet audio=new Audio(ClickSound);const buttonStyle={fontFamily:\"Quicksand\",fontWeight:\"bold\",boxShadow:\"0 0 5px rgba(0, 0, 0, 0.3)\",borderRadius:\"15px\",fontSize:variant===\"Blog\"?\"1.9em\":\"1em\",padding:variant===\"Blog\"?\"40px\":\"10px 20px\",cursor:\"pointer\",transition:\"background-color 0.3s\",textDecoration:\"none\",color:variant===\"Skill\"?\"#233349\":variant===\"Question\"?\"#ffff\":variant===\"Post\"?\"black\":\"#233349\",backgroundColor:variant===\"Skill\"?\"#ffff\":variant===\"Question\"?\"#233349\":variant===\"Post\"?\"#fcf9da\":\"#ffff\"};const start=()=>{if(isSoundOn&&!disableSound){/* checks if isSoundOn is true & disableSound is false, if so will play audio\r\n        \r\n            console.log(\"something\");\r\n/* state here is true, so it will always play unless global button is clicked\r\nthen the rest of the start function does not execute and no sound*/audio.play();}console.log(\"onClick clicked\");if(onClick){onClick();}};return/*#__PURE__*/_jsx(Grid,{children:/*#__PURE__*/_jsx(\"button\",{onClick:start,style:buttonStyle,children:children})});};export default CustomButton;","map":{"version":3,"names":["React","Grid","ClickSound","useSoundContext","jsx","_jsx","CustomButton","_ref","children","onClick","variant","disableSound","isSoundOn","audio","Audio","buttonStyle","fontFamily","fontWeight","boxShadow","borderRadius","fontSize","padding","cursor","transition","textDecoration","color","backgroundColor","start","play","console","log","style"],"sources":["C:/Users/conne/Documents/GitHub/react-project/src/soundReact/customButton.js"],"sourcesContent":["import React from 'react';\r\nimport Grid from \"@mui/joy/Grid\";\r\nimport ClickSound from \"./clicksound.wav\";\r\nimport { useSoundContext } from './SoundContext';\r\n\r\nconst CustomButton = ({children, onClick, variant, disableSound}) => {\r\n    const { isSoundOn } = useSoundContext();\r\n    disableSound = disableSound ? disableSound : false;\r\n    /* if disableSound is truthy, execute disableSound, if not then disableSound \r\n    is false or not truthy and do not execute*/\r\n\r\n    // bringing in state so that it knows what sound to connect to\r\n\r\n    let audio = new Audio(ClickSound);\r\n\r\n    const buttonStyle = {\r\n        fontFamily: \"Quicksand\",\r\n        fontWeight: \"bold\",\r\n        boxShadow: \"0 0 5px rgba(0, 0, 0, 0.3)\",\r\n        borderRadius: \"15px\",\r\n        fontSize: variant === \"Blog\" ? \"1.9em\" : \"1em\",\r\n        padding: variant === \"Blog\" ? \"40px\" : \"10px 20px\",\r\n        cursor: \"pointer\",\r\n        transition: \"background-color 0.3s\",\r\n        textDecoration: \"none\",\r\n        color: variant === \"Skill\" ? \"#233349\"\r\n            : variant === \"Question\" ? \"#ffff\"\r\n            : variant === \"Post\" ? \"black\" : \"#233349\",\r\n        backgroundColor: variant === \"Skill\" ? \"#ffff\"\r\n            : variant === \"Question\" ? \"#233349\"\r\n            : variant === \"Post\" ? \"#fcf9da\"\r\n            : \"#ffff\",\r\n    };\r\n\r\n    const start = () => {\r\n        if (isSoundOn && !disableSound) {\r\n        /* checks if isSoundOn is true & disableSound is false, if so will play audio\r\n        \r\n            console.log(\"something\");\r\n/* state here is true, so it will always play unless global button is clicked\r\nthen the rest of the start function does not execute and no sound*/\r\n        audio.play();\r\n        }\r\n        console.log(\"onClick clicked\");\r\n        if (onClick) {\r\n            onClick()\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Grid>\r\n            <button onClick={start} style={buttonStyle}>\r\n                {children}\r\n            </button>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default CustomButton;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,IAAI,KAAM,eAAe,CAChC,MAAO,CAAAC,UAAU,KAAM,kBAAkB,CACzC,OAASC,eAAe,KAAQ,gBAAgB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEjD,KAAM,CAAAC,YAAY,CAAGC,IAAA,EAAgD,IAA/C,CAACC,QAAQ,CAAEC,OAAO,CAAEC,OAAO,CAAEC,YAAY,CAAC,CAAAJ,IAAA,CAC5D,KAAM,CAAEK,SAAU,CAAC,CAAGT,eAAe,CAAC,CAAC,CACvCQ,YAAY,CAAGA,YAAY,CAAGA,YAAY,CAAG,KAAK,CAClD;AACJ,+CADI,CAGA;AAEA,GAAI,CAAAE,KAAK,CAAG,GAAI,CAAAC,KAAK,CAACZ,UAAU,CAAC,CAEjC,KAAM,CAAAa,WAAW,CAAG,CAChBC,UAAU,CAAE,WAAW,CACvBC,UAAU,CAAE,MAAM,CAClBC,SAAS,CAAE,4BAA4B,CACvCC,YAAY,CAAE,MAAM,CACpBC,QAAQ,CAAEV,OAAO,GAAK,MAAM,CAAG,OAAO,CAAG,KAAK,CAC9CW,OAAO,CAAEX,OAAO,GAAK,MAAM,CAAG,MAAM,CAAG,WAAW,CAClDY,MAAM,CAAE,SAAS,CACjBC,UAAU,CAAE,uBAAuB,CACnCC,cAAc,CAAE,MAAM,CACtBC,KAAK,CAAEf,OAAO,GAAK,OAAO,CAAG,SAAS,CAChCA,OAAO,GAAK,UAAU,CAAG,OAAO,CAChCA,OAAO,GAAK,MAAM,CAAG,OAAO,CAAG,SAAS,CAC9CgB,eAAe,CAAEhB,OAAO,GAAK,OAAO,CAAG,OAAO,CACxCA,OAAO,GAAK,UAAU,CAAG,SAAS,CAClCA,OAAO,GAAK,MAAM,CAAG,SAAS,CAC9B,OACV,CAAC,CAED,KAAM,CAAAiB,KAAK,CAAGA,CAAA,GAAM,CAChB,GAAIf,SAAS,EAAI,CAACD,YAAY,CAAE,CAChC;AACR;AACA;AACA;AACA,mEACQE,KAAK,CAACe,IAAI,CAAC,CAAC,CACZ,CACAC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC,CAC9B,GAAIrB,OAAO,CAAE,CACTA,OAAO,CAAC,CAAC,CACb,CACJ,CAAC,CAED,mBACIJ,IAAA,CAACJ,IAAI,EAAAO,QAAA,cACDH,IAAA,WAAQI,OAAO,CAAEkB,KAAM,CAACI,KAAK,CAAEhB,WAAY,CAAAP,QAAA,CACtCA,QAAQ,CACL,CAAC,CACP,CAAC,CAEf,CAAC,CAED,cAAe,CAAAF,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}