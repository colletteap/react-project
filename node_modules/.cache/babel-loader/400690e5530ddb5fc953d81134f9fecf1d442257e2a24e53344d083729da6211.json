{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\conne\\\\Documents\\\\GitHub\\\\react-project\\\\src\\\\components\\\\Postcard.js\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport Card from \"@mui/joy/Card\";\nimport CardContent from \"@mui/joy/CardContent\";\nimport Link from \"@mui/joy/Link\";\nimport Input from \"@mui/joy/Input\";\nimport { addCommentToArray } from \"./Data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Postcard({\n  type,\n  cardId\n}) {\n  _s();\n  const [comment, setComment] = React.useState(\"\");\n  const handlePostClick = () => {\n    if (comment.trim() === \"\") {\n      return;\n    }\n  };\n  addCommentToArray(newComment);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    variant: \"outlined\",\n    sx: {\n      minWidth: 300,\n      width: \"25%\",\n      border: \"2px solid black\",\n      borderRadius: \"15px\",\n      \"--Card-radius\": theme => theme.vars.radius.xs\n    },\n    children: [/*#__PURE__*/_jsxDEV(CardContent, {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        component: \"button\",\n        underline: \"none\",\n        fontSize: \"sm\",\n        fontWeight: \"lg\",\n        textColor: \"text.primary\",\n        children: type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), commentsList.map(commentItem => /*#__PURE__*/_jsxDEV(CardContent, {\n      sx: {\n        border: \"2px solid #A8512F\",\n        borderRadius: \"10px\",\n        padding: \"8px\",\n        fontSize: \"sm\"\n      },\n      children: commentItem.text\n    }, commentItem.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(CardContent, {\n      orientation: \"horizontal\",\n      sx: {\n        gap: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        variant: \"plain\",\n        size: \"sm\",\n        placeholder: \"Ask a question!\",\n        value: comment,\n        onChange: e => setComment(e.target.value),\n        sx: {\n          flex: 1,\n          px: 0,\n          \"--Input-focusedThickness\": \"0px\",\n          border: \"2px solid #233349\",\n          borderRadius: \"5px\",\n          padding: \"5px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        onClick: handlePostClick,\n        underline: \"none\",\n        role: \"button\",\n        children: \"Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(Postcard, \"rrFebW9Q28aJJ+M9AxcXUmcj4W0=\");\n_c = Postcard;\nvar _c;\n$RefreshReg$(_c, \"Postcard\");","map":{"version":3,"names":["React","Card","CardContent","Link","Input","addCommentToArray","jsxDEV","_jsxDEV","Postcard","type","cardId","_s","comment","setComment","useState","handlePostClick","trim","newComment","variant","sx","minWidth","width","border","borderRadius","theme","vars","radius","xs","children","component","underline","fontSize","fontWeight","textColor","fileName","_jsxFileName","lineNumber","columnNumber","commentsList","map","commentItem","padding","text","id","orientation","gap","size","placeholder","value","onChange","e","target","flex","px","onClick","role","_c","$RefreshReg$"],"sources":["C:/Users/conne/Documents/GitHub/react-project/src/components/Postcard.js"],"sourcesContent":["import * as React from \"react\";\r\nimport Card from \"@mui/joy/Card\";\r\nimport CardContent from \"@mui/joy/CardContent\";\r\nimport Link from \"@mui/joy/Link\";\r\nimport Input from \"@mui/joy/Input\";\r\nimport { addCommentToArray } from \"./Data\";\r\n\r\nexport default function Postcard({ type, cardId }) {\r\n  const [comment, setComment] = React.useState(\"\");\r\n\r\n\r\n  const handlePostClick = () => {\r\n    if (comment.trim() === \"\") {\r\n      return;\r\n    }}\r\n\r\n\r\n    addCommentToArray(newComment);\r\n\r\n \r\n\r\n  return (\r\n    <Card\r\n      variant=\"outlined\"\r\n      sx={{\r\n        minWidth: 300,\r\n        width: \"25%\",\r\n        border: \"2px solid black\", \r\n        borderRadius: \"15px\", \r\n        \"--Card-radius\": (theme) => theme.vars.radius.xs,\r\n      }}\r\n    >\r\n    \r\n      <CardContent>\r\n        <Link\r\n           component=\"button\"\r\n           underline=\"none\"\r\n           fontSize=\"sm\"\r\n           fontWeight=\"lg\"\r\n           textColor=\"text.primary\"\r\n        >{type}</Link>\r\n      </CardContent>\r\n      {commentsList.map((commentItem) => (\r\n        <CardContent key={commentItem.id} \r\n        sx={{ border: \"2px solid #A8512F\", \r\n        borderRadius: \"10px\", \r\n        padding: \"8px\",\r\n        fontSize:\"sm\"}}>\r\n          {commentItem.text}\r\n        </CardContent>\r\n      ))}\r\n      <CardContent orientation=\"horizontal\" sx={{ gap: 1 }}>\r\n        <Input\r\n          variant=\"plain\"\r\n          size=\"sm\"\r\n          placeholder=\"Ask a question!\"\r\n          value={comment}\r\n          onChange={(e) => setComment(e.target.value)}\r\n          sx={{ flex: 1, \r\n            px: 0, \r\n            \"--Input-focusedThickness\": \"0px\", \r\n            border: \"2px solid #233349\", \r\n            borderRadius: \"5px\",  \r\n            padding: \"5px\"}}\r\n        />\r\n        <Link onClick={handlePostClick} underline=\"none\" role=\"button\">\r\n          Post\r\n        </Link>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n          }\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}