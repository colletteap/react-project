{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\conne\\\\Documents\\\\GitHub\\\\react-project\\\\src\\\\soundReact\\\\customButton.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Grid from \"@mui/joy/Grid\";\nimport ClickSound from \"./clicksound.wav\";\nimport { useSoundContext } from './SoundContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomButton = ({\n  children,\n  onClick,\n  variant\n}) => {\n  _s();\n  const {\n    isSoundOn\n  } = useSoundContext();\n\n  // bringing in state so that it knows what sound to connect to\n\n  let audio = new Audio(ClickSound);\n  const buttonStyle = {\n    fontFamily: \"Quicksand\",\n    fontWeight: \"bold\",\n    boxShadow: \"0 0 5px rgba(0, 0, 0, 0.3)\",\n    borderRadius: \"15px\",\n    fontSize: variant === \"Blog\" ? \"1.9em\" : \"1em\",\n    padding: variant === \"Blog\" ? \"40px\" : \"10px 20px\",\n    cursor: \"pointer\",\n    transition: \"background-color 0.3s\",\n    textDecoration: \"none\",\n    color: variant === \"Skill\" ? \"#233349\" : variant === \"Question\" ? \"#ffff\" : variant === \"Post\" ? \"black\" : \"#233349\",\n    backgroundColor: variant === \"Skill\" ? \"#ffff\" : variant === \"Question\" ? \"#233349\" : variant === \"Post\" ? \"#fcf9da\" : \"#ffff\"\n  };\n  const start = () => {\n    if (isSoundOn && disableSound) {\n      /* state here is true, so it will always play unless global button is clicked\r\n      then the rest of the start function does not execute and no sound*/\n      audio.play();\n    }\n    console.log(\"onClick clicked\");\n    if (onClick) {\n      onClick();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: start,\n      style: buttonStyle,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_s(CustomButton, \"+Tvw1R/FrfuIBW4e2f3sdRORW/g=\", false, function () {\n  return [useSoundContext];\n});\n_c = CustomButton;\nexport default CustomButton;\nvar _c;\n$RefreshReg$(_c, \"CustomButton\");","map":{"version":3,"names":["React","Grid","ClickSound","useSoundContext","jsxDEV","_jsxDEV","CustomButton","children","onClick","variant","_s","isSoundOn","audio","Audio","buttonStyle","fontFamily","fontWeight","boxShadow","borderRadius","fontSize","padding","cursor","transition","textDecoration","color","backgroundColor","start","disableSound","play","console","log","style","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/conne/Documents/GitHub/react-project/src/soundReact/customButton.js"],"sourcesContent":["import React from 'react';\r\nimport Grid from \"@mui/joy/Grid\";\r\nimport ClickSound from \"./clicksound.wav\";\r\nimport { useSoundContext } from './SoundContext';\r\n\r\nconst CustomButton = ({children, onClick, variant}) => {\r\n    const { isSoundOn } = useSoundContext();\r\n\r\n    // bringing in state so that it knows what sound to connect to\r\n\r\n    let audio = new Audio(ClickSound);\r\n\r\n    const buttonStyle = {\r\n        fontFamily: \"Quicksand\",\r\n        fontWeight: \"bold\",\r\n        boxShadow: \"0 0 5px rgba(0, 0, 0, 0.3)\",\r\n        borderRadius: \"15px\",\r\n        fontSize: variant === \"Blog\" ? \"1.9em\" : \"1em\",\r\n        padding: variant === \"Blog\" ? \"40px\" : \"10px 20px\",\r\n        cursor: \"pointer\",\r\n        transition: \"background-color 0.3s\",\r\n        textDecoration: \"none\",\r\n        color: variant === \"Skill\" ? \"#233349\"\r\n            : variant === \"Question\" ? \"#ffff\"\r\n            : variant === \"Post\" ? \"black\" : \"#233349\",\r\n        backgroundColor: variant === \"Skill\" ? \"#ffff\"\r\n            : variant === \"Question\" ? \"#233349\"\r\n            : variant === \"Post\" ? \"#fcf9da\"\r\n            : \"#ffff\",\r\n    };\r\n\r\n    const start = () => {\r\n        if (isSoundOn && disableSound) {\r\n/* state here is true, so it will always play unless global button is clicked\r\nthen the rest of the start function does not execute and no sound*/\r\n        audio.play();\r\n        }\r\n        console.log(\"onClick clicked\");\r\n        if (onClick) {\r\n            onClick()\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Grid>\r\n            <button onClick={start} style={buttonStyle}>\r\n                {children}\r\n            </button>\r\n        </Grid>\r\n    );\r\n};\r\n\r\nexport default CustomButton;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,eAAe;AAChC,OAAOC,UAAU,MAAM,kBAAkB;AACzC,SAASC,eAAe,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,YAAY,GAAGA,CAAC;EAACC,QAAQ;EAAEC,OAAO;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACnD,MAAM;IAAEC;EAAU,CAAC,GAAGR,eAAe,CAAC,CAAC;;EAEvC;;EAEA,IAAIS,KAAK,GAAG,IAAIC,KAAK,CAACX,UAAU,CAAC;EAEjC,MAAMY,WAAW,GAAG;IAChBC,UAAU,EAAE,WAAW;IACvBC,UAAU,EAAE,MAAM;IAClBC,SAAS,EAAE,4BAA4B;IACvCC,YAAY,EAAE,MAAM;IACpBC,QAAQ,EAAEV,OAAO,KAAK,MAAM,GAAG,OAAO,GAAG,KAAK;IAC9CW,OAAO,EAAEX,OAAO,KAAK,MAAM,GAAG,MAAM,GAAG,WAAW;IAClDY,MAAM,EAAE,SAAS;IACjBC,UAAU,EAAE,uBAAuB;IACnCC,cAAc,EAAE,MAAM;IACtBC,KAAK,EAAEf,OAAO,KAAK,OAAO,GAAG,SAAS,GAChCA,OAAO,KAAK,UAAU,GAAG,OAAO,GAChCA,OAAO,KAAK,MAAM,GAAG,OAAO,GAAG,SAAS;IAC9CgB,eAAe,EAAEhB,OAAO,KAAK,OAAO,GAAG,OAAO,GACxCA,OAAO,KAAK,UAAU,GAAG,SAAS,GAClCA,OAAO,KAAK,MAAM,GAAG,SAAS,GAC9B;EACV,CAAC;EAED,MAAMiB,KAAK,GAAGA,CAAA,KAAM;IAChB,IAAIf,SAAS,IAAIgB,YAAY,EAAE;MACvC;AACA;MACQf,KAAK,CAACgB,IAAI,CAAC,CAAC;IACZ;IACAC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAC9B,IAAItB,OAAO,EAAE;MACTA,OAAO,CAAC,CAAC;IACb;EACJ,CAAC;EAED,oBACIH,OAAA,CAACJ,IAAI;IAAAM,QAAA,eACDF,OAAA;MAAQG,OAAO,EAAEkB,KAAM;MAACK,KAAK,EAAEjB,WAAY;MAAAP,QAAA,EACtCA;IAAQ;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACP,CAAC;AAEf,CAAC;AAACzB,EAAA,CA7CIJ,YAAY;EAAA,QACQH,eAAe;AAAA;AAAAiC,EAAA,GADnC9B,YAAY;AA+ClB,eAAeA,YAAY;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}